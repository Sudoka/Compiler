  store 11 0
### Converting: val_copy 10 s2 
  val_copy 10 regB
  store regB 2
### Converting: val_copy s2 s1 
  load 2 regA
  val_copy regA regB
  store regB 1
### Converting: val_copy 20 s3 
  val_copy 20 regB
  store regB 3
### Converting: test_less s1 s3 s4 
  load 1 regA
  load 3 regB
  test_less regA regB regC
  store regC 4
### Converting: jump_if_0 s4 if_else_0 
  load 4 regA
  jump_if_0 regA if_else_0
### Converting: val_copy 15 s5 
  val_copy 15 regB
  store regB 5
### Converting: add s1 s5 s6 
  load 1 regA
  load 5 regB
  add regA regB regC
  store regC 6
### Converting: val_copy s6 s1 
  load 6 regA
  val_copy regA regB
  store regB 1
### Converting: jump if_end_1 
  jump if_end_1
if_else_0: 
if_end_1: 
### Converting: val_copy 20 s7 
  val_copy 20 regB
  store regB 7
### Converting: test_less s1 s7 s8 
  load 1 regA
  load 7 regB
  test_less regA regB regC
  store regC 8
### Converting: jump_if_0 s8 if_else_2 
  load 8 regA
  jump_if_0 regA if_else_2
### Converting: val_copy 15 s9 
  val_copy 15 regB
  store regB 9
### Converting: add s1 s9 s10 
  load 1 regA
  load 9 regB
  add regA regB regC
  store regC 10
### Converting: val_copy s10 s1 
  load 10 regA
  val_copy regA regB
  store regB 1
### Converting: jump if_end_3 
  jump if_end_3
if_else_2: 
if_end_3: 
### Converting: out_int s1 
  load 1 regA
  out_int regA
### Converting: out_char '\n'           # End print statements with a newline.
  out_char '\n'
