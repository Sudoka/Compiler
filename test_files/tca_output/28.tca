  store 29 0
### Converting: val_copy 15 s3 
  val_copy 15 regB
  store regB 3
### Converting: val_copy s3 s1 
  load 3 regA
  val_copy regA regB
  store regB 1
### Converting: val_copy 75 s4 
  val_copy 75 regB
  store regB 4
### Converting: val_copy s4 s2 
  load 4 regA
  val_copy regA regB
  store regB 2
### Converting: div s2 s1 s5 
  load 2 regA
  load 1 regB
  div regA regB regC
  store regC 5
### Converting: val_copy 5 s6 
  val_copy 5 regB
  store regB 6
### Converting: test_equ s5 s6 s7 
  load 5 regA
  load 6 regB
  test_equ regA regB regC
  store regC 7
### Converting: test_nequ s7 0 s8 
### Converting: jump_if_n0 s8 end_bool_0 # OR!
  load 8 regA
  jump_if_n0 regA end_bool_0
### Converting: sub s2 s1 s9 
  load 2 regA
  load 1 regB
  sub regA regB regC
  store regC 9
### Converting: val_copy 70 s10 
  val_copy 70 regB
  store regB 10
### Converting: test_less s9 s10 s11 
  load 9 regA
  load 10 regB
  test_less regA regB regC
  store regC 11
### Converting: test_nequ s11 0 s8 
end_bool_0: 
### Converting: test_equ s8 0 s12 
### Converting: out_int s12 
  load 12 regA
  out_int regA
### Converting: out_char '\n'           # End print statements with a newline.
  out_char '\n'
### Converting: div s2 s1 s13 
  load 2 regA
  load 1 regB
  div regA regB regC
  store regC 13
### Converting: val_copy 5 s14 
  val_copy 5 regB
  store regB 14
### Converting: test_gtr s13 s14 s15 
  load 13 regA
  load 14 regB
  test_gtr regA regB regC
  store regC 15
### Converting: test_nequ s15 0 s16 
### Converting: jump_if_n0 s16 end_bool_1 # OR!
  load 16 regA
  jump_if_n0 regA end_bool_1
### Converting: sub s2 s1 s17 
  load 2 regA
  load 1 regB
  sub regA regB regC
  store regC 17
### Converting: val_copy 6 s18 
  val_copy 6 regB
  store regB 18
### Converting: div s17 s18 s19 
  load 17 regA
  load 18 regB
  div regA regB regC
  store regC 19
### Converting: val_copy 10 s20 
  val_copy 10 regB
  store regB 20
### Converting: test_equ s19 s20 s21 
  load 19 regA
  load 20 regB
  test_equ regA regB regC
  store regC 21
### Converting: test_nequ s21 0 s16 
end_bool_1: 
### Converting: test_equ s16 0 s22 
### Converting: out_int s22 
  load 22 regA
  out_int regA
### Converting: out_char '\n'           # End print statements with a newline.
  out_char '\n'
### Converting: test_gtr s1 s2 s23 
  load 1 regA
  load 2 regB
  test_gtr regA regB regC
  store regC 23
### Converting: test_nequ s23 0 s24 
### Converting: jump_if_n0 s24 end_bool_2 # OR!
  load 24 regA
  jump_if_n0 regA end_bool_2
### Converting: val_copy 2 s25 
  val_copy 2 regB
  store regB 25
### Converting: mult s1 s25 s26 
  load 1 regA
  load 25 regB
  mult regA regB regC
  store regC 26
### Converting: test_equ s26 s2 s27 
  load 26 regA
  load 2 regB
  test_equ regA regB regC
  store regC 27
### Converting: test_nequ s27 0 s24 
end_bool_2: 
### Converting: test_equ s24 0 s28 
### Converting: out_int s28 
  load 28 regA
  out_int regA
### Converting: out_char '\n'           # End print statements with a newline.
  out_char '\n'
